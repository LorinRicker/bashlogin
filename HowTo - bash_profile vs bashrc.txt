An Explanation of .bashrc and .bash_profile

Both the ~/.bashrc and ~/.bash_profile are scripts that might be executed when
bash is invoked. The ~/.bashrc file gets executed when you run bash using an
interactive shell that is not a login shell.  The ~/.bash_profile only gets
executed during a login shell.  What does this all mean? The paragraphs below
explains interactive shells, login shells, .bashrc, .bash_profile and other
bash scripts that are executed during login.

Login Shells (.bash_profile)

A login shell is a bash shell that is started with - or --login.  The following
are examples that will invoke a login shell.

    sudo su -
    bash --login
    ssh user@host

When BASH is invoked as a login shell, the following files are executed in the
displayed order.

    /etc/profile
    ~/.bash_profile
    ~/.bash_login
    ~/.profile

Although ~/.bashrc is not listed here, most default ~/.bash_profile scripts
run ~/.bashrc.

Purely Interactive Shells (.bashrc)

Interactive shells are those not invoked with -c and whose standard input and
output are connected to a terminal. Interactive shells do not need to be login
shells.  Here are some examples that will evoke an interactive shell that is not
a login shell.

    sudo su
    bash
    ssh user@host /path/to/command

In this case of an interactive but non-login shell, only ~/.bashrc is executed.
In most cases, the default ~/.bashrc script executes the system's /etc/bashrc.

Be warned that you should never echo output to the screen in a ~/.bashrc file.
Otherwise, commands like 'ssh user@host /path/to/command' will echo output
unrelated to the command called.

Non-interactive shells

Non-interactive shells do not automatically execute any scripts like ~/.bashrc
or ~/.bash_profile.  Here are some examples of non-interactive shells.

    su user -c /path/to/command
    bash -c /path/to/command

The shell program /bin/bash (hereafter referred to as just "the shell") uses
a collection of startup files to help create an environment. Each file has a
specific use and may affect login and interactive environments differently.
The files in the /etc directory generally provide global settings. If an
equivalent file exists in your home directory it may override the global settings.

An interactive login shell is started after a successful login, using /bin/login,
by reading the /etc/passwd file. This shell invocation normally reads /etc/profile
and its private equivalent ~/.bash_profile upon startup.

An interactive non-login shell is normally started at the command-line using a
shell program (e.g., [prompt]$/bin/bash) or by the /bin/su command. An interactive
non-login shell is also started with a terminal program such as xterm or konsole
from within a graphical environment. This type of shell invocation normally copies
the parent environment and then reads the user's ~/.bashrc file for additional
startup configuration instructions.

A non-interactive shell is usually present when a shell script is running. It is
non-interactive because it is processing a script and not waiting for user input
between commands. For these shell invocations, only the environment inherited from
the parent shell is used.

The file ~/.bash_logout is not used for an invocation of the shell. It is read
and executed when a user exits from an interactive login shell.

Many distributions use /etc/bashrc for system wide initialization of non-login
shells. This file is usually called from the user's ~/.bashrc file and is not
built directly into bash itself. This convention is followed in this section.

For more information, see the bash man page.
