#!/usr/bin/env bash

# $HOME/bin/login/pygmentize-magik
# Lorin Ricker: pygmentize functions

shF="$( basename ${0#-} ) - pygmentize-magik"
Ident="${shF}  # (LMR version 1.04 of 08/08/2017)"
[ "$DEBUGMODE" = "1" ] && echo "%login-I, ${Ident}"

# use: $ pyg sourcefile [oformat] [style] [fontface] [fontsize]
#
# Output formatters (oformat) - see $ pygmentize -L formatters --
#   bbcode (bb), bmp (bitmap), gif, html, png (img), jpg (jpeg), latex (tex),
#   raw (tokens), rtf, svg, terminal (console), terminal256 (console256, 256)
#   with 'term' as short-hand for 256, text (null)
#
# Styles (styl) - see $ pygmentize -L styles --
#   autumn, borland, bw, colorful, default, emacs, friendly, fruity, manni,
#   monokai, murphy, native, pastie, perldoc, rrt, tango, trac, vim, vs
#
# Filters (not implemented here) - see $ pygmentize -L filters --
#   codetagify, gobble, highlight, keywordcase,
#   raiseonerror, tokenmerge, whitespace
#
# Lexers - see $ pygmentize -L lexers -- lists ~141 languages and syntaxes,
#   including Ruby (rb), Python (py), Perl, yaml, awk, bash (sh), C/C++/cpp,
#   various Lisps, Erlang, Factor, Go, Haskell, Scala, Io, Java, JavaScript,
#   JSON, Julia, Lua, make (variants), Pascal, Modula, SQL (dialects), Tcl,
#   TeX/LaTeX, Sass/CSS, XML and HTML (variants), and many more...
#
pyg()
  {
    if [ "$1" = '' ] || [ "$1" = '-h' ] || [ "$1" == '-?' ] ; then
      cat <<helptext
use: pyg file [ofmt] [styl] [fface] [fsiz]
        file  = filename to pygment
        ofmt  = output format (default 'rtf')
        styl  = output style (default 'vs')
        fface = fontface (default 'Hack')
        fsiz  = fontsize (default 9pt)
helptext
    else
      local f=$( basename $1 )   # strip path
            f=${f%.*}            # and strip file extension
      local ofmt='rtf'
      if [ "$2" != "" ] ; then ofmt="$2" ; fi
      # 'terminal256' is much more readable than 'terminal',
      # so use 'term' as short-hand for 'terminal256':
      if [ "$ofmt" = 'term' ] ; then ofmt='256' ; fi
      local styl='vs'
      if [ "$3" != "" ] ; then styl=$3 ; fi
      local fface='DejaVu Sans Mono'
      if [ "$4" != "" ] ; then fface=$4 ; fi
      local fsiz='9'
      if [ "$5" != "" ] ; then fsiz=$5 ; fi
      outf="${f}_${styl}.${ofmt}"
      echo "%pyg-i-generating, $1 -> $outf : '${fface}' - '${fsiz}'"
      pygmentize -O style="${styl}",fontface="${fface}",fontsize=${fsiz} \
        -f ${ofmt} "$1" >./${outf}
      case ${ofmt} in
        *256* | *term* | *cons* )  # if output is ANSI-colored ASCII,
          cat ./${outf}            # just admire it on-screen too...
          ;;
        * )
          ;;
      esac
    fi
  }
export -f pyg

# use: $ pygspectrum sourcefile [format (d=rtf)]
pygspectrum()
  {
    if [ "$1" = '' ] || [ "$1" = '-h' ] || [ "$1" == '-?' ] ; then
      cat <<helptext
use: pygspectrum file [ofmt] [fface] [fsiz]
        file  = filename to pygment
        ofmt  = output format (default 'rtf')
        fface = fontface (default 'Hack')
        fsiz  = fontsize (default 9pt)
helptext
    else
      local sty=''
      # Edit/update this style list as new color styles become available:
      #   Unusable for paper/print: monokai fruity native rrt vim
      #   (these are light-text on dark-background)
      for sty in \
      autumn borland bw colorful default emacs friendly manni \
      murphy pastie perldoc tango trac vs ; do
        pyg "$1" "$2" "${sty}" "$3" "$4"
    done
    fi
  }
export -f pygspectrum
