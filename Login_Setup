#!/usr/bin/env bash

# $HOME/projects/login/login_setup
# Lorin Ricker: set up bash-login environment & commands

shF=$( basename $0 )
Ident="${shF}  # (LMR version 1.28 of 02/09/2015)"
[ "$DEBUGMODE" = "1" ] && echo "%login-I, ${Ident}"

DST="$HOME/bin/login"
SRC="$HOME/projects/login"
STASH="$HOME/projects/login/stash"
BCKSYM="~"
RELEASED=""

function symlink()
  {
  # Create a sym-link for each bash login script in $HOME:
  local fnam=$1
  if [ ! -L "$HOME/.${fnam}" ]; then   # not a sym-link?
    mv "$HOME/.${fnam}" "$STASH/.${fnam}-original"
    [ ! -e $SRC/${fnam} ] && cp "$STASH/.${fnam}-original" $SRC/${fnam}
    ln -s $DST/${fnam} $HOME/.${fnam}
  fi
  }

function copylogin()
  {
  local fnam=$1
  local rel=$RELEASED
  if ! $( cmp --quiet $SRC/${fnam} $DST/${fnam} ); then
    # rename previous version as backup...
    [ -e $DST/${fnam} ]            && mv $DST/${fnam} $DST/${fnam}${BCKSYM}
    [ -e $DST/${fnam}${BCKSYM} ] && chmod 600 $DST/${fnam}${BCKSYM}
    # copy the new...
    cp $SRC/${fnam} $DST/${fnam}
    chmod 700 $DST/${fnam}
    # account for the release...
    FCNT=$((FCNT + 1))
    if [ "$rel" = "" ]; then
      rel="${fnam}"
    else
      rel="${rel} ${fnam}"
    fi
  fi
  # cleanup any source-backup copy...
  [ -e "$SRC/${fnam}${BCKSYM}" ] && rm $SRC/${fnam}${BCKSYM}
  #  !>> Don't allow "-v" or any other output in this function <<!
  #  see: http://www.linuxjournal.com/content/return-values-bash-functions
  # also: http://bash.cyberciti.biz/guide/Returning_from_a_function
  echo "${rel}"  # the return value...
  }

function list_binlogin()
  {
  local -i fcount=0
  # Show the released (...bin/) directory:
  echo -e "\n[ \033[1m\033[4m$DST\033[0m ]"
  ls -lA $DST/
  # Count and report released files:
  for r in $RELEASED ; do
    fcount=$(( fcount + 1 ))
  done
  printf "  \033[4mFiles released: %d\033[0m\n" $fcount
  if [ "$fcount" -ge 1 ]; then
    printf "    \033[1m%s\033[0m\n" "${RELEASED}"
  fi
  }

function list_home()
 {
  # Show the hidden sym-link files in $HOME:
  echo -e "\n[ \033[1m\033[4m$HOME\033[0m ]"
  ls -goA ~/.profile ~/.bashrc          \
         ~/.inputrc ~/.bash_logout      \
         ~/.pryrc ~/.irbrc ~/.gitconfig \
         ~/.rdebugrc ~/.emacs
  }

function remove_confusion()
 {
  # remove $HOME/.bash_{profile,login}, both actual files and/or symlinks:
  f="$HOME/$1"
  # Just a symlink?  delete it:
  [ -L "$f" ] && ( echo "%${shF}-i, unnecessary symlink..." ; rm -v $f )
  # A regular file?  prompt for deletion:
  [ -f "$f" ] && ( echo "%${shF}-i, unnecessary file..." ; rm -iv $f )
 }

# ======================================================================

opt=${1:-release}   # parameter-1 or default "release"
opt=$( echo "$opt" | tr A-Z a-z );
opt=${opt##-}       # remove any leading - or -- from option
opt=${opt##-}

case "$opt" in

  abo* | hel* | inf* )  # spit out some documentation...
    echo -e "\n$Ident\n"
    cat <<EOD
  Usage:  $ ./Login_Setup --[ release (D) | sym|link|ln | list | help|info|about ]

  Summary: 1) Release (copy) bash-core login files
                from ~/projects/login/ edit-directory
                to   ~/bin/login/ operational directory
           2) (re)Create ~/.bashrc (etc.) as sym-link(s)
              which point to $HOME/bin/login/*

  Using ideas from the "bash Cookbook" (Albing, Vossen & Newham, O'Reilly, 2007),
  this script establishes a system of profile/bashrc login script files which:

  a) Replaces the text/script file ~/.profile with a sym-link of the same name
     which points at the actual script file in ~/bin/login/profile ...

  b) Replaces the text/script file ~/.bashrc with a sym-link of the same name
     which points at the actual script file in ~/bin/login/bashrc ...

  c) That base bashrc file invokes other login component scripts, including
     (but not limited to):

        ~/bin/login/{aliases,functions,logicals,...}

  d) All of these bash-login scripts are to be edited in the working directory
     ~/projects/login/ and, when ready, can be released to the operational
     directory ~/bin/login/ using this Login_Setup script...

  e) Sym-links also replace these regular files:

        ~/.bash_logout  ~/.inputrc  ~/.emacs
        ~/.pryrc        ~/.irbrc    ~/.gitconfig
        ~/.rdebugrc

  This approach simplifies bash-login file development and maintenance, and
  simplifies (some of) the clutter of files in a user's $HOME directory...

EOD
    ;;

  lis* )
    list_binlogin
    list_home
    # ...and list $STASH/*-original versions, if any exist:
    sf="$STASH/.*-original"
    fc=$( ls -A $sf 2> /dev/null | wc -l )
    if [ $fc -ge 1 ]; then
      echo -e "\n[ $fc $STASH/*-original files ]"
      ls -lA $sf
    fi
    ;;

  sym* | lin* | ln* )  # create or replace sym-links...
    symlink profile
    symlink bashrc
    symlink inputrc
    symlink bash_logout
    symlink pryrc
    symlink irbrc
    symlink gitconfig
    symlink rdebugrc
    symlink emacs

    remove_confusion .bash_profile
    remove_confusion .bash_login

    list_home
    ;;

  rel* | * )  # default: copy bash-core login files
              #          from edit-dir to ~/bin/login/
    # these are sym-linked:
    RELEASED=$( copylogin profile          $FCNT )
    RELEASED=$( copylogin bashrc           $FCNT )
    RELEASED=$( copylogin inputrc          $FCNT )
    RELEASED=$( copylogin bash_logout      $FCNT )
    RELEASED=$( copylogin pryrc            $FCNT )
    RELEASED=$( copylogin irbrc            $FCNT )
    RELEASED=$( copylogin gitconfig        $FCNT )
    RELEASED=$( copylogin rdebugrc         $FCNT )
    RELEASED=$( copylogin emacs            $FCNT )

    # these are .-sourced (mostly from bashrc):
    RELEASED=$( copylogin aliases          $FCNT )
    RELEASED=$( copylogin cd-magik         $FCNT )
    RELEASED=$( copylogin debugmode        $FCNT )
    RELEASED=$( copylogin doc_function     $FCNT )
    RELEASED=$( copylogin functions        $FCNT )
    RELEASED=$( copylogin git-magik        $FCNT )
    RELEASED=$( copylogin logicals         $FCNT )
    RELEASED=$( copylogin NetCommands      $FCNT )
    RELEASED=$( copylogin path-magik       $FCNT )
    RELEASED=$( copylogin pygmentize-magik $FCNT )
    RELEASED=$( copylogin ruby_setup       $FCNT )

    # unused placeholder, just for documentation:
    RELEASED=$( copylogin bash_profile     $FCNT )

    list_binlogin $FCNT
    list_home
    ;;

esac

# exit 0
