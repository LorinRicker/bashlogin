#!/usr/bin/env bash

# $HOME/bin/login/aliases
# Lorin Ricker: personal aliases

shF="$( basename ${0#-} ) - aliases"
Ident="${shF}  # (LMR version 5.07 of 07/20/2015)"
[ "$DEBUGMODE" = "1" ] && echo "%login-I, ${Ident}"

# Exports global variable DEBUGMODE (value 0|1):
DMfile="$HOME/bin/Debug_Mode"
if [ -a $DMfile ]; then
  alias debug="source $DMfile"  # > source <, not subprocess...
  source $DMfile OFF
fi

# =========================

# Login setup tool:
alias loginsetup="$lgi/Login_Setup"

# reset bash login environment:
alias relogin="source ~/.bashrc"

# =========================

# PATH fixups:
alias cleanpath='PATH=$( pathclean "$PATH" )'
alias   fixpath='PATH=$( perfectpath )'

# =========================

# A means to show all "sys" functions and aliases:
alias showsys="alias | grep [s]ys ; $HOME/bin/lsfunction -f sys%"
# And one for general-purpose alias shows:
alias     glo="alias | egrep --color -i"

alias system='sudo -i'
# don't forget "sudo !!" to put sudo in front of the previous command:
# (but this won't work, either as an alias or a as a function:
#    alias oops="sudo !!")

alias shutdown='sudo shutdown -Pv now'
alias   reboot='sudo shutdown -rv now'
alias nologins='sudo shutdown -kv now'

alias  killmy="$HOME/bin/process --kill"
alias killsys="sudo $HOME/bin/process --kill"  # note: requires at least Ruby v2.0
                                               #       installed at system-level
##alias   sysed="gksudo subl"

# Create a new, system-wide application launcher (but does not add this to Unity's
# side/task-bar or to user's ~/Desktop; see also ~/bin/tomyDesktop script to copy
# a sys-wide *.desktop to ~/Desktop) --
alias sysLauncher='sudo gnome-desktop-item-edit /usr/share/applications/ --create-new'

# =========================

alias  verifyON='set -x'
alias verifyOFF='set +x'

# some more ls aliases:
alias ll='ls -lAh --file-type'
alias lr='ls -lARh --file-type'
alias la='ls -Ah --file-type'
# alias l='ls -CF'

# some verbose variants:
alias cpv='cp -v'
alias mvv='mv -v'
alias rmv='rm -v'
alias lnv='ln -v'

# =========================
# fine-tune some commands:
alias mkdir='mkdir -pv'
alias gconf='gconf-editor &'

# alias  mx='chmod a+x'   #make All eXecutable (UGO)

# mount/dismount sshfs/fuse remote disks independently in one motion --
# see ~/projects/com/mount-sshfs.sh (executed from ~/bin/):
alias mntMusic='mount-sshfs lorin ; sleep 1 ; mount-sshfs mirrors'
alias disMusic='mount-sshfs lorin dismount ; sleep 3 ; mount-sshfs mirrors dismount'

# some VMS-like stuff:
alias    cls='clear'
alias   myps='ps -U lorin'
alias   ssys='ps -ef | less'
alias   dwho='who -HbdprtTu'
alias   duck='du -skch * | sort -rn'  # Top-level totals
alias    du='du -h'
alias    df='df -hT'
alias  disk='df -hT -t ext3 -t ext4 -t fuse.sshfs -t cifs'
alias    di='di -f SbcvpTM'
alias  freek='free -ktl'
alias  freem='free -mtl'
# e2label /dev/sdb1 newLabel  # to "set volume /dev/sdb1 newLabel"
alias initx3='sudo mke2fs -t ext3 -L'
alias initx4='sudo mke2fs -t ext4 -L'
alias recall='history | grep '     # needs argument

# Just be sure that my "main printer" is named "sysprint"
# (not something printer-model-number-specific):
alias sysprint='lpr -P sysprint'

# audiocat shortcut:
alias acat="audiocat -vr -t ogg"

# aptitude/Synaptic package management:
# List installed packages, CSV-formatted for spreadsheet uptake:
alias instpkg='aptitude search -F "%p,%v,\"%d\"" --disable-columns ~i'

# Simplify dpkg-* lookups/queries:
alias dpi='dpkg --get-selections | grep '  # dpi pkg* (wildcards permitted)
alias dpq='dpkg-query --list'              # dpq pkg* (wildcards permitted)
alias dpr="dpkg-query --show --showformat='\${Package;-42} \${Version;-16} \${Architecture}\\n \${Description}\\n\\n'"
alias dps='dpkg-query --status'            # dps package_name (no wildcard)

# Linux network stuff --
# See ~/projects/login/NetCommands for more network monitoring commands:
alias   ping='ping -c5 -W1'
alias pingtr='mtr -c5 -i3'  # mtr combines ping and tracert
# Define a group of network monitoring commands:
alias netcmd='source ~/bin/login/NetCommands'

# -------------------------
# bru --stats --progress --itemize --verbose
#   defaults:     --use=/home/lorin/.config/bru/bru.yaml.rc
#             --exclude=/home/lorin/.config/bru/common_rsync.excl
alias bruhome='bru -tpiv --source=/home/lorin'
alias  brulib='bru -tpiv --source=/usr/Mirrors/LorinLibrary'
alias howtobru='logicals | grep "arc\|music" ; alias | grep bru'
# -------------------------

# -------------------------
# rsync's --archive = --recursive --perms --links --times --owner --group --devices --specials
#        (-a = -rlptgoD)
# (Note that "$ sudo backup ..." doesn't work, because root-proc doesn't inherit alias "backup"!)
# bup="rsync -auh --stats --exclude-from=/home/lorin/projects/sysmgr/common_rsync.excl"
# alias     backup="${bup}"
# alias    backupv="${bup} --progress --itemize-changes"
# alias  backupsys="sudo ${bup}"
# alias backupsysv="sudo ${bup} --progress --itemize-changes"
# =========================

# -------------------------
# Note: In order for these scripts, bash: mkssf[.sh] and ruby: mkssfpath[.rb]
#       to affect the current process environment -- i.e., to let them define
#       "logical names" (bash variables) which are visible in the current
#       process -- then this corresponding alias *must* be defined to *source*
#       the script file...
f="$HOME/bin/mkssf"
if [ -a $f ]; then
  alias mkssf="source $f"   # same as ". $f"
else
  echo "%${shF}-fnf, file not found \"$f\""
fi

#~ f="$HOME/bin/CopyLoginStash"
#~ if [ -a $f ]; then
  #~ alias stashlog="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

#~ f="$HOME/bin/release2bin"
#~ if [ -a $f ]; then
  #~ alias relbin="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

### Don't need aliases for these, as the filename suffices as the command,
### and $HOME/bin is in the $PATH search-path...
#~ f="$HOME/bin/essentials"
#~ if [ -a $f ]; then
  #~ alias essentials="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

#~ f="$HOME/bin/keepalive"
#~ if [ -a $f ]; then
  #~ alias keepalive="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

#~ f="$HOME/bin/mping"
#~ if [ -a $f ]; then
  #~ alias mping="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

#~ f="$HOME/bin/rollup"
#~ if [ -a $f ]; then
  #~ alias rollup="$f"
#~ else
  #~ echo "%${shF}-fnf, file not found \"$f\""
#~ fi

# # support for personal backup logfile monitoring:
# f="$HOME/scratch/logfiles/rsynctrees-music.log"
# if [ -a $f ]; then
#   alias catblf="cat $f | less -N"
# fi

# f="$HOME/scratch/logfiles/rsynctrees-music.log"
# if [ -a $f ]; then
#   alias tailblf="tail -fn 40 $f"
# fi
# -------------------------

# =========================
# enable color support of ls &/or grep:
if [ "$TERM" != "dumb" ] && [ -x /usr/bin/dircolors ]; then
  eval "`dircolors -b`"
  alias grep='grep --color=auto'
  # alias ls='ls --color=auto'
  # alias fgrep='fgrep --color=auto'
  # alias egrep='egrep --color=auto'
fi
# -------------------------

# =========================
# Show your own aliases & logicals at login-time:
if [ "$DEBUGMODE" = 1 ]; then
  alias -p   # display aliases
  logicals   # display logical names
  echo -e "\n%Ruby-I, aliases set for [1mRuby v${RBV}[0m"
fi
# =========================

# =========================
# QR code tools:
f="$HOME/.qrcodegen/QRCodeGen.jar"
if [ -a $f ]; then
  alias qrcgen="java -jar $f &"
fi
alias qrcgen="java -jar $f &"
# =========================

# =========================
#      PARSEC specific:
# =========================
# Need these at office and home; be sure that all VPNs are turned off:
alias cl2="ssh lricker@class2.parsec.com"
alias cl6="ssh lricker@class6.parsec.com"
alias cl8="ssh lricker@class8.parsec.com"

if [ "$HOSTNAME" == "alikot" ]; then   # I'm at work...

  # Be sure that the Denver Post VPN is up for these:
  alias DRAX01="telnet 172.24.65.21"
  alias DRAX02="telnet 172.24.65.22"

fi
# =========================

return 0  # don't: exit 0
